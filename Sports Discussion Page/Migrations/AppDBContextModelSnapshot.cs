// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sports_Discussion_Page.Models;

#nullable disable

namespace Sports_Discussion_Page.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Sports_Discussion_Page.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Sports_Discussion_Page.Models.Contribution", b =>
                {
                    b.Property<int>("ContributionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContributionId"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Date")
                        .HasColumnType("int");

                    b.Property<int?>("DiscussionId")
                        .HasColumnType("int");

                    b.Property<int>("Downvotes")
                        .HasColumnType("int");

                    b.Property<int>("Upvotes")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ContributionId");

                    b.HasIndex("DiscussionId");

                    b.ToTable("Contributions");
                });

            modelBuilder.Entity("Sports_Discussion_Page.Models.Discussion", b =>
                {
                    b.Property<int>("DiscussionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscussionId"), 1L, 1);

                    b.Property<int>("Downvotes")
                        .HasColumnType("int");

                    b.Property<DateTime>("PostTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Upvotes")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Views")
                        .HasColumnType("int");

                    b.HasKey("DiscussionId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Discussions");
                });

            modelBuilder.Entity("Sports_Discussion_Page.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"), 1L, 1);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("DiscussionsCount")
                        .HasColumnType("int");

                    b.Property<int>("FollowersCount")
                        .HasColumnType("int");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubjectId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("Sports_Discussion_Page.Models.Contribution", b =>
                {
                    b.HasOne("Sports_Discussion_Page.Models.Discussion", null)
                        .WithMany("Contributions")
                        .HasForeignKey("DiscussionId");
                });

            modelBuilder.Entity("Sports_Discussion_Page.Models.Discussion", b =>
                {
                    b.HasOne("Sports_Discussion_Page.Models.Subject", null)
                        .WithMany("Discussions")
                        .HasForeignKey("SubjectId");
                });

            modelBuilder.Entity("Sports_Discussion_Page.Models.Subject", b =>
                {
                    b.HasOne("Sports_Discussion_Page.Models.Category", null)
                        .WithMany("Subjects")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("Sports_Discussion_Page.Models.Category", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("Sports_Discussion_Page.Models.Discussion", b =>
                {
                    b.Navigation("Contributions");
                });

            modelBuilder.Entity("Sports_Discussion_Page.Models.Subject", b =>
                {
                    b.Navigation("Discussions");
                });
#pragma warning restore 612, 618
        }
    }
}
